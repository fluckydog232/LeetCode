class Solution {
    public int maxProfit(int[] prices,int n) {
       int maxProfits = prices[1] - prices[0];
        int i,j;
       
        for(i=0;i< n;i++){
            for(j=1;j<n-1;j++){
                if(maxProfits<prices[j]-prices[i]){
                    maxProfits=prices[j]-prices[i];
                }
            }
                
            }
    return maxProfits;
    }
                
       
        
    }

public class MainClass {
    public static int[] stringToIntegerArray(String input) {
        input = input.trim();
        input = input.substring(1, input.length() - 1);
        if (input.length() == 0) {
          return new int[0];
        }
    
        String[] parts = input.split(",");
        int[] output = new int[parts.length];
        for(int index = 0; index < parts.length; index++) {
            String part = parts[index].trim();
            output[index] = Integer.parseInt(part);
        }
        return output;
    }
    
    public static void main(String[] args) throws IOException {
        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
        String line;
        while ((line = in.readLine()) != null) {
            int[] prices = stringToIntegerArray(line);
            
            int ret = new Solution().maxProfit(prices);
            
            String out = String.valueOf(ret);
            
            System.out.print(out);
        }
    }
}
